{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/models/feed-details.ts","webpack:///./src/app/models/feed.ts","webpack:///./src/app/models/feedPost.ts","webpack:///./src/app/news-feed/news-feed.module.ts","webpack:///./src/app/news-feed/news-feed.service.ts","webpack:///./src/app/news-feed/news-feed/news-feed-sheet.component.ts","webpack:///./src/app/news-feed/news-feed/news-feed.component.html","webpack:///./src/app/news-feed/news-feed/news-feed.component.scss","webpack:///./src/app/news-feed/news-feed/news-feed.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NewsFeedComponent } from './news-feed/news-feed/news-feed.component';\n\n// define the routes\nconst routes: Routes = [\n  { path: '', redirectTo: 'Nachrichten', pathMatch: 'full' },\n  { path: 'Nachrichten', component : NewsFeedComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ],\n  declarations: []\n})\nexport class AppRoutingModule { }\n","module.exports = \".page-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  bottom: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n}\\r\\n\\r\\n.mat-sidenav-container {\\r\\n  flex: 1;\\r\\n}\\r\\n\\r\\n#page-title {\\r\\n   margin: 0 auto;\\r\\n   font-size: 30px;\\r\\n }\\r\\n\\r\\n.spacer {\\r\\n   width: 40px;\\r\\n }\\r\\n\"","module.exports = \"<!-- wrap whole page -->\\n<div class=\\\"page-container\\\">\\n  <!-- toolbar with heading -->\\n<mat-toolbar color=\\\"primary\\\" class=\\\"mat-elevation-z3\\\">\\n  <button mat-icon-button (click)=\\\"snav.toggle()\\\"><mat-icon>menu</mat-icon></button>\\n  <h1 id=\\\"page-title\\\" >{{title}}</h1>\\n  <span class=\\\"spacer\\\"></span>\\n</mat-toolbar>\\n\\n<mat-sidenav-container class=\\\"mat-sidenav-container\\\">\\n  <!-- navigation menu -->\\n  <mat-sidenav #snav mode=\\\"over\\\" >\\n    <mat-nav-list>\\n      <a mat-list-item href=\\\"/Nachrichten\\\" >\\n        <mat-icon svgIcon=\\\"news\\\" color=\\\"primary\\\"></mat-icon>\\n        Nachrichten\\n      </a>\\n      <mat-divider></mat-divider>\\n      <a mat-list-item href=\\\"/Campus-Karte\\\" >\\n        <mat-icon color=\\\"primary\\\">map</mat-icon>\\n        Campus-Karte\\n      </a>\\n      <mat-divider></mat-divider>\\n      <a mat-list-item href=\\\"/Personensuche\\\" >\\n        <mat-icon svgIcon=\\\"searchPerson\\\" color=\\\"primary\\\"></mat-icon>\\n        Personensuche\\n      </a>\\n      <mat-divider></mat-divider>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n\\n  <!-- wrapper for page content -->\\n  <mat-sidenav-content>\\n    <router-outlet>\\n      <!-- page content inserted from router -->\\n    </router-outlet>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Studierendenportal';\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {NgModule} from '@angular/core';\nimport {HttpClientModule, HttpClient} from '@angular/common/http';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n/* App root */\nimport {AppComponent} from './app.component';\n\n/* Feature Modules */\nimport {CoreModule} from './core/core.module';\nimport {NewsFeedModule} from './news-feed/news-feed.module';\n\nimport {NewsFeedService} from './news-feed/news-feed.service';\n\n/* Routing Module */\nimport {AppRoutingModule} from './app-routing.module';\n\nimport {\n  MatToolbarModule,\n  MatSidenavModule,\n  MatIconModule,\n  MatCardModule,\n  MatListModule,\n  MatButtonModule,\n  MatButtonToggleModule, MatIconRegistry\n} from '@angular/material';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    CoreModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatCardModule,\n    MatIconModule,\n    MatListModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    NewsFeedModule,\n    ServiceWorkerModule.register('/ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [NewsFeedService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(iconRegistry: MatIconRegistry, sanitizer: DomSanitizer) {\n    iconRegistry.addSvgIcon(\n      'news',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/newspaper.svg'))\n      .addSvgIcon('searchPerson',\n        sanitizer.bypassSecurityTrustResourceUrl('assets/icons/account-search-outline.svg'));\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\n\nimport { NewsFeedService } from '../news-feed/news-feed.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [],\n  providers: [\n    NewsFeedService\n  ]\n})\nexport class CoreModule {\n  constructor (@Optional() @SkipSelf() parentModule: CoreModule) {\n    if (parentModule) {\n      throw new Error(\n        'CoreModule is already loaded. Import it in the AppModule only');\n    }\n  }\n}\n","export class FeedDetails {\n  title: string;\n  link: string;\n  description: string;\n  language: string;\n  copyright: string;\n  pubDate: string;\n  image: {\n    url: string;\n    title: string;\n    link: string\n  };\n  constructor() {\n    this.image = { url: '', title: '', link: ''};\n  }\n}\n","import { FeedDetails } from './feed-details';\nimport { FeedPost } from './feedPost';\n\nexport class Feed {\n  feedName: string;\n  details: FeedDetails;\n  items: FeedPost[];\n  constructor(name: string) {\n    this.feedName = name;\n    this.items = [];\n  }\n}\n","export class FeedPost {\n\n  title: string;\n  description: string; link: string;\n  author: string;\n  guid: string;\n  pubDate: string;\n  categories: string[];\n\n  constructor() {\n    this.categories = [];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NewsFeedComponent } from './news-feed/news-feed.component';\nimport {\n  MatSelectModule,\n  MatCardModule,\n  MatChipsModule,\n  MatButtonModule,\n  MatListModule,\n  MatBottomSheetModule\n} from '@angular/material';\nimport { NewsFeedSheetComponent } from './news-feed/news-feed-sheet.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatSelectModule,\n    MatCardModule,\n    MatChipsModule,\n    MatButtonModule,\n    MatListModule,\n    MatBottomSheetModule\n  ],\n  declarations: [NewsFeedComponent, NewsFeedSheetComponent],\n  bootstrap: [NewsFeedSheetComponent]\n})\nexport class NewsFeedModule { }\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {RSSFeed} from '../models/r-s-s-feed';\nimport {Feed} from '../models/feed';\nimport {FeedDetails} from '../models/feed-details';\nimport {FeedPost} from '../models/feedPost';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewsFeedService {\n\n  // list all sources, must point to RSS feed\n  private feedSources: RSSFeed[] = [\n    {name: 'JGU Aktuell', url: 'https://www.uni-mainz.de/32.php'},\n    {name: 'ZDV', url: 'https://www.zdv.uni-mainz.de/feed/'},\n  ];\n\n  feedsAsJSON: Feed[] = [];\n  defaultFeed: Feed;\n  private DOMParser: DOMParser = new DOMParser();\n\n  constructor(\n    private http: HttpClient,\n  ) {  }\n\n  // fetch feed from source\n  getNewsFromFeed(url: string): Observable<string> {\n    return this.http.get(url, {responseType: 'text'});\n  }\n\n  // fetch news from all feeds listed in feedSources and then parse from XML/RSS to JSON\n  getNews() {\n    this.feedSources.forEach((source) => {\n      this.getNewsFromFeed(source.url).toPromise()\n        .then(response => {\n          this.parseFeedFromXmlToJson(response, source.name);\n        });\n    });\n  }\n\n// parse XML feed from string to JSON\n  parseFeedFromXmlToJson(feedAsString: string, feedName: string) {\n    // initialize parameters\n    const feedAsJson: Feed = new Feed(feedName);\n    const details = new FeedDetails();\n    const feedAsXml = this.DOMParser.parseFromString(feedAsString, 'application/xml');\n    const docRoot = feedAsXml.getElementsByTagName('channel')[0] as Element;\n    const feedItems = Array.from(docRoot.getElementsByTagName('item')) as Element[];\n\n    // parse description for Feed\n    details.title = docRoot.getElementsByTagName('title')[0].firstChild.nodeValue;\n    details.link = docRoot.getElementsByTagName('link')[0].firstChild.nodeValue;\n\n    if (docRoot.getElementsByTagName('description')[0].firstChild) {\n      details.description = docRoot.getElementsByTagName('description')[0].firstChild.nodeValue;\n    }\n    details.language = docRoot.getElementsByTagName('language')[0].firstChild.nodeValue;\n\n    if (docRoot.getElementsByTagName('copyright')[0] && docRoot.getElementsByTagName('copyright')[0].firstChild) {\n      details.copyright = docRoot.getElementsByTagName('copyright')[0].firstChild.nodeValue;\n    }\n    details.pubDate = docRoot.getElementsByTagName('pubDate')[0].firstChild.nodeValue;\n\n    if (docRoot.getElementsByTagName('image')[0] && docRoot.getElementsByTagName('image')[0].firstChild) {\n      const imgRoot = docRoot.getElementsByTagName('image')[0] as Element;\n      details.image.url = imgRoot.getElementsByTagName('url')[0].firstChild.nodeValue;\n      details.image.title = imgRoot.getElementsByTagName('title')[0].firstChild.nodeValue;\n      details.image.link = imgRoot.getElementsByTagName('link')[0].firstChild.nodeValue;\n    }\n    feedAsJson.details = details;\n\n    feedItems.forEach((item) => {\n      // parse items from feed\n      const feedItem: FeedPost = new FeedPost();\n      const categories = Array.from(item.getElementsByTagName('category')) as Element[];\n      feedItem.title = item.getElementsByTagName('title')[0].firstChild.nodeValue;\n      feedItem.description = item.getElementsByTagName('description')[0].firstChild.nodeValue;\n      feedItem.link = item.getElementsByTagName('link')[0].firstChild.nodeValue;\n      // feedItem.author = feedItems[i] as Element).getElementsByTagName('author')[0].firstChild.nodeValue;\n      feedItem.guid = item.getElementsByTagName('guid')[0].firstChild.nodeValue;\n      feedItem.pubDate = item.getElementsByTagName('pubDate')[0].firstChild.nodeValue;\n\n      if (categories) {\n        categories.forEach((category) => {\n          feedItem.categories.push(category.firstChild.nodeValue);\n        });\n      }\n      // push item to feed\n      feedAsJson.items.push(feedItem);\n    });\n    this.sortItems(feedAsJson);\n    this.feedsAsJSON.push(feedAsJson);\n\n  }\n\n  // sort items of feed by date, newest first\n  private sortItems(feed: Feed) {\n      feed.items.sort((left, right): number => {\n        if (Date.parse(left.pubDate) < Date.parse(right.pubDate)) {\n          return 1;\n        } else {\n          return -1;\n        }\n      });\n    }\n}\n\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MatBottomSheetRef} from '@angular/material';\r\nimport {MAT_BOTTOM_SHEET_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-news-feed',\r\n  template: '<mat-nav-list>\\n' +\r\n  '  <a href=\"{{ data.item.link }}\" mat-list-item>\\n' +\r\n  '    <span mat-line>Seite öffnen</span>\\n' +\r\n  '  </a>\\n' +\r\n  '</mat-nav-list>',\r\n})\r\nexport class NewsFeedSheetComponent implements OnInit {\r\n\r\n  constructor(\r\n    @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\r\n  private bottomSheetRef: MatBottomSheetRef<NewsFeedSheetComponent> ) { }\r\n\r\n  ngOnInit() { }\r\n}\r\n","module.exports = \"<div class=\\\"content-container\\\">\\n  <mat-form-field>\\n    <!-- list available sources -->\\n    <mat-select name=\\\"sourceSelector\\\" id=\\\"sourceSelector\\\" placeholder=\\\"Quelle auswählen:\\\"\\n                (selectionChange)=\\\"selectHandler($event)\\\">\\n      <mat-option *ngFor=\\\"let feed of this.feeds\\\" [value]=\\\"feed\\\">\\n        {{ feed.feedName }}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  <div class=\\\"output\\\" *ngIf=\\\"activeSource\\\">\\n    <mat-card *ngFor=\\\"let item of activeSource.items\\\" (click)=\\\"openLinkForItem(item)\\\" class=\\\"mat-elevation-z3\\\">\\n      <mat-card-header>\\n        <mat-card-title>\\n          <h3>{{ item.title }}</h3>\\n        </mat-card-title>\\n        <mat-card-subtitle>{{item.pubDate | date: 'dd.MM.yyyy' }}</mat-card-subtitle>\\n      </mat-card-header>\\n      <mat-card-content [innerHtml]=\\\"item.description\\\"></mat-card-content>\\n      <mat-chip-list *ngIf=\\\"item.categories.length > 0\\\">\\n        <mat-chip class=\\\"grey\\\" *ngFor=\\\"let cat of item.categories\\\">\\n          {{ cat }}\\n        </mat-chip>\\n      </mat-chip-list>\\n    </mat-card>\\n  </div>\\n</div>\\n\"","module.exports = \"mat-form-field {\\n  margin-top: 15px; }\\n\\nmat-card {\\n  width: 300px;\\n  margin: 10px;\\n  padding: 24px;\\n  -ms-hyphens: auto;\\n  -webkit-hyphens: auto;\\n  hyphens: auto; }\\n\\nmat-card mat-card-header {\\n    display: block; }\\n\\nmat-card mat-card-content {\\n    padding-bottom: 5px; }\\n\\nmat-card:hover {\\n  box-shadow: 0 8px 9px -5px rgba(0, 0, 0, 0.2), 0 15px 22px 2px rgba(0, 0, 0, 0.14), 0 6px 28px 5px rgba(0, 0, 0, 0.12);\\n  cursor: pointer; }\\n\\nmat-card:hover mat-card-content {\\n    max-height: 100%; }\\n\\nmat-chip-list {\\n  position: absolute;\\n  bottom: 5px;\\n  left: 5px; }\\n\\n/*\\r\\nNot working properly...\\r\\nmat-card-content {\\r\\n  max-height: 200px;\\r\\n  overflow: hidden;\\r\\n  transition: max-height 280ms cubic-bezier(.4,0,.2,1);\\r\\n}\\r\\n*/\\n\\n.output {\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: center; }\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {NewsFeedService} from '../news-feed.service';\r\nimport {Feed} from '../../models/feed';\r\nimport {MatBottomSheet} from '@angular/material';\r\nimport {NewsFeedSheetComponent} from './news-feed-sheet.component';\r\nimport {FeedPost} from '../../models/feedPost';\r\n\r\n@Component({\r\n  selector: 'app-news-feed',\r\n  templateUrl: './news-feed.component.html',\r\n  styleUrls: ['./news-feed.component.scss']\r\n})\r\nexport class NewsFeedComponent implements OnInit {\r\n\r\n  activeSource: Feed;\r\n  feeds: Feed[];\r\n\r\n  constructor(\r\n    private feedService: NewsFeedService,\r\n    private bottomSheet: MatBottomSheet\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getFeeds();\r\n  }\r\n\r\n  getFeeds() {\r\n    this.feedService.getNews();\r\n    this.feeds = this.feedService.feedsAsJSON;\r\n    this.activeSource = this.feedService.defaultFeed;\r\n  }\r\n\r\n  // switch source for feed when selected\r\n  selectHandler(event: any) {\r\n    this.activeSource = event.value;\r\n  }\r\n\r\n  // open link directly only on devices without touch\r\n  openLinkForItem(item: FeedPost) {\r\n    if (window.ontouchstart === undefined) {\r\n      window.open(item.link);\r\n    } else {\r\n      this.bottomSheet.open(NewsFeedSheetComponent, {data: {item: item}});\r\n    }\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}